From 30d68ff88744777dadb16d5800ad586c75277069 Mon Sep 17 00:00:00 2001
From: beviu <contact@beviu.com>
Date: Fri, 2 May 2025 10:20:26 +0200
Subject: [PATCH 3/3] mm: swap: add SWAP_FLAG_SYNC_IO

madvise(MADV_PAGEOUT) can be used to tell the kernel to swap out pages,
but there is no easy way to wait for them to actually be removed from
the swap cache.

It does call swap_writepage directly which submits the write
operation but does so asynchronously, unless the swap file has the
SWP_SYNCHRONOUS_IO flag, and that flag is currently only set when the
underlying block device is marked as synchronous (bdev_synchronous).

Add a SWAP_FLAG_SYNC_IO flag to swapon that forces the swap file to use
synchronous writes (with SWP_SYNCHRONOUS_IO).

This is still not enough for userspace to be able to wait for the
pages to be removed from the swap cache, as the write callback
(__end_swap_bio_write) only ends writeback against the folio, so it will
still not be freed until the next reclaim, but this will be dealt in
another commit.
---
 include/linux/swap.h | 3 ++-
 mm/swapfile.c        | 3 ++-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/include/linux/swap.h b/include/linux/swap.h
index db46b25a65ae..7c8a312655c0 100644
--- a/include/linux/swap.h
+++ b/include/linux/swap.h
@@ -27,10 +27,11 @@ struct pagevec;
 #define SWAP_FLAG_DISCARD	0x10000 /* enable discard for swap */
 #define SWAP_FLAG_DISCARD_ONCE	0x20000 /* discard swap area at swapon-time */
 #define SWAP_FLAG_DISCARD_PAGES 0x40000 /* discard page-clusters after use */
+#define SWAP_FLAG_SYNC_IO	0x80000 /* use synchronous writes */
 
 #define SWAP_FLAGS_VALID	(SWAP_FLAG_PRIO_MASK | SWAP_FLAG_PREFER | \
 				 SWAP_FLAG_DISCARD | SWAP_FLAG_DISCARD_ONCE | \
-				 SWAP_FLAG_DISCARD_PAGES)
+				 SWAP_FLAG_DISCARD_PAGES | SWAP_FLAG_SYNC_IO)
 #define SWAP_BATCH 64
 
 static inline int current_is_kswapd(void)
diff --git a/mm/swapfile.c b/mm/swapfile.c
index 2eff8b51a945..a3b280a457cc 100644
--- a/mm/swapfile.c
+++ b/mm/swapfile.c
@@ -3374,7 +3374,8 @@ SYSCALL_DEFINE2(swapon, const char __user *, specialfile, int, swap_flags)
 	if (si->bdev && bdev_stable_writes(si->bdev))
 		si->flags |= SWP_STABLE_WRITES;
 
-	if (si->bdev && bdev_synchronous(si->bdev))
+	if ((swap_flags & SWAP_FLAG_SYNC_IO) ||
+	    (si->bdev && bdev_synchronous(si->bdev)))
 		si->flags |= SWP_SYNCHRONOUS_IO;
 
 	if (si->bdev && bdev_nonrot(si->bdev)) {
-- 
2.49.0

