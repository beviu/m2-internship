From e50ef4edf99d7721db830996082d8cf011aa8fd8 Mon Sep 17 00:00:00 2001
From: Bijan Tabatabai <bijan311@gmail.com>
Date: Fri, 25 Feb 2022 18:38:51 -0600
Subject: [PATCH 029/179] Move creating FOM file before calling
 get_unmapped_area

This causes big allocations to be 2M aligned
---
 mm/mmap.c | 34 +++++++++++++++++-----------------
 1 file changed, 17 insertions(+), 17 deletions(-)

diff --git a/mm/mmap.c b/mm/mmap.c
index 0a2377e5bd79..8fe2cfc29cff 100644
--- a/mm/mmap.c
+++ b/mm/mmap.c
@@ -1293,6 +1293,23 @@ unsigned long do_mmap(struct file *file, unsigned long addr,
 	if (mm->map_count > sysctl_max_map_count)
 		return -ENOMEM;
 
+	// See if we want to use file only memory
+	if (!file && (flags & MAP_ANONYMOUS) && use_file_only_mem(current->tgid)) {
+		file = fom_create_new_file(len, prot);
+
+		if (file) {
+			created_fom_file = true;
+			flags = flags & ~MAP_ANONYMOUS;
+
+			// If the caller used MAP_PRIVATE, switch it to MAP_SHARED so that
+			// the system doesn't save the writes to anonymous memory
+			if (flags & MAP_PRIVATE) {
+				flags = flags & ~MAP_PRIVATE;
+				flags = flags | MAP_SHARED;
+			}
+		}
+	}
+
 	/* Obtain the address to map to. we verify (or select) it and ensure
 	 * that it represents a valid section of the address space.
 	 */
@@ -1325,23 +1342,6 @@ unsigned long do_mmap(struct file *file, unsigned long addr,
 	if (mlock_future_check(mm, vm_flags, len))
 		return -EAGAIN;
 
-	// See if we want to use file only memory
-	if (!file && (flags & MAP_ANONYMOUS) && use_file_only_mem(current->tgid)) {
-		file = fom_create_new_file(len, prot);
-
-		if (file) {
-			created_fom_file = true;
-			flags = flags & ~MAP_ANONYMOUS;
-
-			// If the caller used MAP_PRIVATE, switch it to MAP_SHARED so that
-			// the system doesn't save the writes to anonymous memory
-			if (flags & MAP_PRIVATE) {
-				flags = flags & ~MAP_PRIVATE;
-				flags = flags | MAP_SHARED;
-			}
-		}
-	}
-
 	if (file) {
 		struct inode *inode = file_inode(file);
 		unsigned long flags_mask;
-- 
2.49.0

