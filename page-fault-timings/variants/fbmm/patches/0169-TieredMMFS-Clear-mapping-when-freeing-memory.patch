From 48ea371468984165a9be99fdf9cb781e982262b4 Mon Sep 17 00:00:00 2001
From: Bijan Tabatabai <btabatabai@wisc.edu>
Date: Wed, 30 Oct 2024 12:10:57 -0500
Subject: [PATCH 169/179] TieredMMFS: Clear mapping when freeing memory

This is necessary for things like futex, which checks if a page
has a non-null mapping.

TODO: Update mapping when a page is migrated.
---
 TieredMMFS/fs.c | 4 ++++
 TieredMMFS/fs.h | 1 +
 fs/dax.c        | 1 +
 3 files changed, 6 insertions(+)

diff --git a/TieredMMFS/fs.c b/TieredMMFS/fs.c
index 95f5d1afa032..fc8d22ddd8ea 100644
--- a/TieredMMFS/fs.c
+++ b/TieredMMFS/fs.c
@@ -228,6 +228,7 @@ static long tieredmmfs_free_range(struct inode *inode, loff_t offset, loff_t len
         write_unlock(&inode_info->map_lock);
 
         tieredmmfs_return_page(sbi, page);
+        dax_delete_mapping_entry(inode_info->mapping, page->page_offset << (sbi->page_shift - PAGE_SHIFT));
 
         if (!next_node)
             break;
@@ -853,8 +854,11 @@ static struct vm_operations_struct tieredmmfs_vm_ops = {
 
 static int tieredmmfs_mmap(struct file *file, struct vm_area_struct *vma)
 {
+    struct tieredmmfs_inode_info *inode_info = FTFS_I(file->f_inode);
+
     file_accessed(file); // TODO: probably don't need this
     vma->vm_ops = &tieredmmfs_vm_ops;
+    inode_info->mapping = file->f_mapping;
 
     return 0;
 }
diff --git a/TieredMMFS/fs.h b/TieredMMFS/fs.h
index c48371670e45..8d098788ba4d 100644
--- a/TieredMMFS/fs.h
+++ b/TieredMMFS/fs.h
@@ -66,6 +66,7 @@ struct tieredmmfs_sb_info {
 struct tieredmmfs_inode_info {
     struct rb_root page_maps; // Mapping of offset page to dax page
     rwlock_t map_lock;
+    struct address_space *mapping;
 };
 
 struct tieredmmfs_context_info {
diff --git a/fs/dax.c b/fs/dax.c
index b6d6739c3f17..5beae15dc319 100644
--- a/fs/dax.c
+++ b/fs/dax.c
@@ -826,6 +826,7 @@ int dax_delete_mapping_entry(struct address_space *mapping, pgoff_t index)
 	WARN_ON_ONCE(!ret);
 	return ret;
 }
+EXPORT_SYMBOL_GPL(dax_delete_mapping_entry);
 
 /*
  * Invalidate DAX entry if it is clean.
-- 
2.49.0

