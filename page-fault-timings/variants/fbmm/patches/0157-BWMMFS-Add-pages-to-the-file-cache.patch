From 83b093aefdb5df5314555f45b59516cfec1ff379 Mon Sep 17 00:00:00 2001
From: BIJAN TABATABAI <btabatabai@wisc.edu>
Date: Mon, 29 Jan 2024 11:07:56 -0600
Subject: [PATCH 157/179] BWMMFS: Add pages to the file cache

---
 BandwidthMMFS/bandwidth.c | 4 ++++
 mm/filemap.c              | 1 +
 2 files changed, 5 insertions(+)

diff --git a/BandwidthMMFS/bandwidth.c b/BandwidthMMFS/bandwidth.c
index 296634162701..6739cfdced29 100644
--- a/BandwidthMMFS/bandwidth.c
+++ b/BandwidthMMFS/bandwidth.c
@@ -60,10 +60,12 @@ static vm_fault_t bwmmfs_fault(struct vm_fault *vmf)
 {
     struct vm_area_struct *vma = vmf->vma;
     struct inode *inode = vma->vm_file->f_inode;
+    struct address_space *mapping = vma->vm_file->f_mapping;
     struct bwmmfs_inode_info * inode_info;
     struct bwmmfs_sb_info *sbi;
     struct page *page;
     loff_t offset = vmf->address - vma->vm_start + (vma->vm_pgoff << PAGE_SHIFT);
+    loff_t pgoff = offset >> PAGE_SHIFT;
     pte_t entry;
 
     inode_info = BWMMFS_I(inode);
@@ -90,6 +92,8 @@ static vm_fault_t bwmmfs_fault(struct vm_fault *vmf)
             return VM_FAULT_OOM;
         }
         sbi->num_pages++;
+        INIT_LIST_HEAD(&page->lru);
+        __filemap_add_folio(mapping, page_folio(page), pgoff, GFP_KERNEL, NULL);
 
         mtree_store(&inode_info->mt, offset, page, GFP_KERNEL);
     }
diff --git a/mm/filemap.c b/mm/filemap.c
index 0e20a8d6dd93..5b7ad2525a98 100644
--- a/mm/filemap.c
+++ b/mm/filemap.c
@@ -923,6 +923,7 @@ noinline int __filemap_add_folio(struct address_space *mapping,
 	folio_put_refs(folio, nr);
 	return xas_error(&xas);
 }
+EXPORT_SYMBOL_GPL(__filemap_add_folio);
 ALLOW_ERROR_INJECTION(__filemap_add_folio, ERRNO);
 
 int filemap_add_folio(struct address_space *mapping, struct folio *folio,
-- 
2.49.0

