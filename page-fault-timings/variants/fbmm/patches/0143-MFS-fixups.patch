From 99fd87bb2f380c29838d8e15094b2e5e7bad1675 Mon Sep 17 00:00:00 2001
From: BIJAN TABATABAI <btabatabai@wisc.edu>
Date: Wed, 10 Jan 2024 13:29:10 -0600
Subject: [PATCH 143/179] MFS fixups

---
 BasicMMFS/basic.c | 6 ++++--
 TieredMMFS/fs.c   | 1 -
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/BasicMMFS/basic.c b/BasicMMFS/basic.c
index 3b87a82b4f99..d51cb61a7fee 100644
--- a/BasicMMFS/basic.c
+++ b/BasicMMFS/basic.c
@@ -109,6 +109,7 @@ static vm_fault_t basicmmfs_fault(struct vm_fault *vmf)
     struct basicmmfs_inode_info *inode_info;
     struct basicmmfs_sb_info *sbi;
     struct page *page;
+    u64 pgoff = ((vmf->address - vma->vm_start) >> PAGE_SHIFT) + vma->vm_pgoff;
     vm_fault_t ret = 0;
     pte_t entry;
 
@@ -116,7 +117,7 @@ static vm_fault_t basicmmfs_fault(struct vm_fault *vmf)
     sbi = BMMFS_SB(inode->i_sb);
 
     // Get the page if it already allocated
-    page = mtree_load(&inode_info->mt, vmf->pgoff);
+    page = mtree_load(&inode_info->mt, pgoff);
 
     // For now, do nothing if the pte already exists.
     // TODO: I'm not sure if this is right...
@@ -135,7 +136,7 @@ static vm_fault_t basicmmfs_fault(struct vm_fault *vmf)
 
     // Try to allocate the page if it hasn't been already (e.g. from fallocate)
     if (!page) {
-        page = basicmmfs_alloc_page(inode_info, sbi, vmf->pgoff);
+        page = basicmmfs_alloc_page(inode_info, sbi, pgoff);
         if (!page) {
             ret = VM_FAULT_OOM;
             goto unlock;
@@ -157,6 +158,7 @@ static vm_fault_t basicmmfs_fault(struct vm_fault *vmf)
     update_mmu_cache(vma, vmf->address, vmf->pte);
     vmf->page = page;
     get_page(page);
+    ret = VM_FAULT_NOPAGE;
 
 unlock:
     pte_unmap_unlock(vmf->pte, vmf->ptl);
diff --git a/TieredMMFS/fs.c b/TieredMMFS/fs.c
index 97efd7f50055..fc6ee92b3d63 100644
--- a/TieredMMFS/fs.c
+++ b/TieredMMFS/fs.c
@@ -855,7 +855,6 @@ static int tieredmmfs_mmap(struct file *file, struct vm_area_struct *vma)
 {
     file_accessed(file); // TODO: probably don't need this
     vma->vm_ops = &tieredmmfs_vm_ops;
-    vma->vm_flags |= VM_MIXEDMAP | VM_HUGEPAGE;
 
     return 0;
 }
-- 
2.49.0

