From f6f2ce78aaab045f5b80df4052c0773fd17a6911 Mon Sep 17 00:00:00 2001
From: Bijan Tabatabai <bijan311@gmail.com>
Date: Mon, 24 Oct 2022 12:56:05 -0500
Subject: [PATCH 064/179] fomtierfs_free_range: Get next_node before removing
 node from rb tree

---
 FOMTierFS/fs.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/FOMTierFS/fs.c b/FOMTierFS/fs.c
index e7b8fe5b9097..577a29805776 100644
--- a/FOMTierFS/fs.c
+++ b/FOMTierFS/fs.c
@@ -110,7 +110,7 @@ static long fomtierfs_free_range(struct inode *inode, loff_t offset, loff_t len)
 {
     struct fomtierfs_sb_info *sbi = FTFS_SB(inode->i_sb);
     struct fomtierfs_inode_info *inode_info = FTFS_I(inode);
-    struct rb_node *node;
+    struct rb_node *node, *next_node;
     struct fomtierfs_page *page;
     u64 page_offset = offset >> PAGE_SHIFT;
     u64 num_pages = len >> PAGE_SHIFT;
@@ -125,13 +125,14 @@ static long fomtierfs_free_range(struct inode *inode, loff_t offset, loff_t len)
     node = &page->node;
 
     while(page->page_offset < page_offset + num_pages) {
+        next_node = rb_next(node);
         rb_erase(node, &inode_info->page_maps);
 
         fomtierfs_return_page(sbi, page);
 
-        node = rb_next(node);
-        if (!node)
+        if (!next_node)
             break;
+        node = next_node;
         page = container_of(node, struct fomtierfs_page, node);
     }
 
-- 
2.49.0

