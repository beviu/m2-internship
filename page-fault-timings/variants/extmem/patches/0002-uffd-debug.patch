From 7ee46fb2a3508f81afb1d22f946db19bbc1eb3fb Mon Sep 17 00:00:00 2001
From: SepehrDV2 <sepehr.jalalian.edu@gmail.com>
Date: Sun, 30 Jul 2023 10:17:11 -0700
Subject: [PATCH 02/14] uffd debug

---
 include/linux/userfaultfd_k.h    |  2 +-
 include/uapi/linux/userfaultfd.h |  2 +-
 mm/memory.c                      |  2 +-
 mm/userfaultfd.c                 | 10 +++++-----
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/include/linux/userfaultfd_k.h b/include/linux/userfaultfd_k.h
index fcfe31337593..6b73c9799a1c 100644
--- a/include/linux/userfaultfd_k.h
+++ b/include/linux/userfaultfd_k.h
@@ -73,7 +73,7 @@ extern int mwriteprotect_range(struct mm_struct *dst_mm,
 
 extern ssize_t dma_mcopy_pages(struct mm_struct *dst_mm,
 				struct uffdio_dma_copy *uufdio_dma_copy,
-			    	bool *mmap_changing);
+			    	atomic_t *mmap_changing);
 extern int dma_request_channs(struct uffdio_dma_channs *uffdio_dma_channs);
 extern int dma_release_channs(void);
 
diff --git a/include/uapi/linux/userfaultfd.h b/include/uapi/linux/userfaultfd.h
index 0878d1455117..a1c65d00959f 100644
--- a/include/uapi/linux/userfaultfd.h
+++ b/include/uapi/linux/userfaultfd.h
@@ -46,7 +46,7 @@
 #define UFFD_API_RANGE_IOCTLS_BASIC		\
 	((__u64)1 << _UFFDIO_WAKE |		\
 	 (__u64)1 << _UFFDIO_COPY |		\
-	 (__u64)1 << _UFFDIO_CONTINUE) |
+	 (__u64)1 << _UFFDIO_CONTINUE | \
 	 (__u64)1 << _UFFDIO_COPY |		\
 	 (__u64)1 << _UFFDIO_TLBFLUSH | \
    (__u64)1 << _UFFDIO_CR3      | \
diff --git a/mm/memory.c b/mm/memory.c
index 38e196361eac..7f6bfa935052 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -4533,7 +4533,7 @@ static inline vm_fault_t wp_huge_pmd(struct vm_fault *vmf)
 	}
 
 	if (vma_is_dax(vmf->vma)) {
-		if (userfaultfd_huge_pmd_wp(vmf->vma, orig_pmd)) {
+		if (userfaultfd_huge_pmd_wp(vmf->vma, vmf->orig_pmd)) {
 			return handle_userfault(vmf, VM_UFFD_WP);
 		}
 	}
diff --git a/mm/userfaultfd.c b/mm/userfaultfd.c
index 5e8493d19dbf..f5830ff2e12c 100644
--- a/mm/userfaultfd.c
+++ b/mm/userfaultfd.c
@@ -854,7 +854,7 @@ int dma_release_channs(void)
 
 static __always_inline ssize_t __dma_mcopy_pages(struct mm_struct *dst_mm,
 					      struct uffdio_dma_copy *uffdio_dma_copy,
-					      bool *mmap_changing)
+					      atomic_t *mmap_changing)
 {
 	struct vm_area_struct *dst_vma;
 	ssize_t err;
@@ -889,14 +889,14 @@ static __always_inline ssize_t __dma_mcopy_pages(struct mm_struct *dst_mm,
     #ifdef DEBUG_TM
     start = rdtsc();
     #endif
-	down_read(&dst_mm->mmap_sem);
+	down_read(&dst_mm->mmap_lock);
     /*
 	 * If memory mappings are changing because of non-cooperative
 	 * operation (e.g. mremap) running in parallel, bail out and
 	 * request the user to retry later
 	 */
 	err = -EAGAIN;
-	if (mmap_changing && READ_ONCE(*mmap_changing))
+	if (mmap_changing && atomic_read(mmap_changing))
 		goto out_unlock;
 
 	BUG_ON(uffdio_dma_copy == NULL);
@@ -981,7 +981,7 @@ static __always_inline ssize_t __dma_mcopy_pages(struct mm_struct *dst_mm,
 	}
 
 out_unlock:
-	up_read(&dst_mm->mmap_sem);
+	up_read(&dst_mm->mmap_lock);
 out:
    	BUG_ON(copied < 0);
 	BUG_ON(err > 0);
@@ -1005,7 +1005,7 @@ ssize_t mcopy_atomic(struct mm_struct *dst_mm, unsigned long dst_start,
 
 ssize_t dma_mcopy_pages(struct mm_struct *dst_mm,
 		     struct uffdio_dma_copy *uffdio_dma_copy,
-		     bool *mmap_changing)
+		     atomic_t *mmap_changing)
 {
 	return __dma_mcopy_pages(dst_mm, 
 			      uffdio_dma_copy,
-- 
2.49.0

